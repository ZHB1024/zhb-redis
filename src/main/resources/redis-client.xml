<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:p="http://www.springframework.org/schema/p"  
       xmlns:tx="http://www.springframework.org/schema/tx"  
       xmlns:context="http://www.springframework.org/schema/context"  
       xsi:schemaLocation="  
      http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans.xsd  
      http://www.springframework.org/schema/tx  
      http://www.springframework.org/schema/tx/spring-tx.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 引入server.properties文件 -->
    <bean class="com.zhb.forever.framework.config.spring.ConfigurablePropertyPlaceholder">
        <property name="propertyLocationSystemProperty" value="propertyPath" />
        <property name="defaultPropertyFileName" value="server.properties" />
        <property name="ignoreResourceNotFound" value="false" />
    </bean>

    <!--（1）如果你有多个数据源需要通过<context:property-placeholder管理，且不愿意放在一个配置文件里，那么一定要加上ignore-unresolvable=“true"-->  
    <!--（2）注意新版的（具体从哪个版本开始不清楚，有兴趣可以查一下）JedisPoolConfig的property name，不是maxActive而是maxTotal，而且没有maxWait属性，建议看一下Jedis源码。-->  
    <!-- redis连接池 -->  
    <bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxTotal" value="${sys.redis.maxActive}"></property>  
        <property name="maxIdle" value="${sys.redis.maxIdle}"></property>  
        <property name="maxWaitMillis" value="${sys.redis.maxWait}"></property>  
        <property name="testOnBorrow" value="${sys.redis.testOnBorrow}"></property>  
    </bean>  
    <!-- redis连接工厂 -->  
    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="hostName" value="${sys.redis.host}"></property>  
        <property name="port" value="${sys.redis.port}"></property>  
        <property name="password" value="${sys.redis.password}"></property>  
        <property name="poolConfig" ref="jedisConfig"></property>  
    </bean>  
    <!-- redis操作模板，这里采用尽量面向对象的模板 -->  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory" ref="redisConnectionFactory"/>  
        <!--     如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！-->  
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>  
        </property>  
        <property name="valueSerializer">  
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>  
        </property>  
        <property name="hashKeySerializer">            
        	<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />        
        </property>        
        <property name="hashValueSerializer">            
        	<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />        
        </property>

        <!--开启事务-->  
        <property name="enableTransactionSupport" value="true"/>  
    </bean>
    
    <bean id="redisClient" class="com.zhb.forever.redis.client.impl.RedisClientImpl">
      <property name="redisTemplate" ref="redisTemplate"></property>
	</bean>
	
</beans>    
    
